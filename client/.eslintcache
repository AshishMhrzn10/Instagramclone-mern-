[{"/home/ashish/Desktop/projects/MERN/instagram clone/client/src/index.js":"1","/home/ashish/Desktop/projects/MERN/instagram clone/client/src/App.js":"2","/home/ashish/Desktop/projects/MERN/instagram clone/client/src/reportWebVitals.js":"3","/home/ashish/Desktop/projects/MERN/instagram clone/client/src/components/Navbar.js":"4","/home/ashish/Desktop/projects/MERN/instagram clone/client/src/components/screens/Profile.js":"5","/home/ashish/Desktop/projects/MERN/instagram clone/client/src/components/screens/Home.js":"6","/home/ashish/Desktop/projects/MERN/instagram clone/client/src/components/screens/Signup.js":"7","/home/ashish/Desktop/projects/MERN/instagram clone/client/src/components/screens/Signin.js":"8","/home/ashish/Desktop/projects/MERN/instagram clone/client/src/components/screens/CreatePost.js":"9","/home/ashish/Desktop/projects/MERN/instagram clone/client/src/reducers/userReducer.js":"10","/home/ashish/Desktop/projects/MERN/instagram clone/client/src/components/screens/UserProfile.js":"11","/home/ashish/Desktop/projects/MERN/instagram clone/client/src/components/screens/SubscribedUserPosts.js":"12"},{"size":500,"mtime":1609643867374,"results":"13","hashOfConfig":"14"},{"size":1735,"mtime":1611473630168,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1609643867378,"results":"16","hashOfConfig":"14"},{"size":1211,"mtime":1611473126098,"results":"17","hashOfConfig":"14"},{"size":3038,"mtime":1612333974485,"results":"18","hashOfConfig":"14"},{"size":5189,"mtime":1611473919897,"results":"19","hashOfConfig":"14"},{"size":2921,"mtime":1611893171511,"results":"20","hashOfConfig":"14"},{"size":2014,"mtime":1610422134199,"results":"21","hashOfConfig":"14"},{"size":2387,"mtime":1609993003987,"results":"22","hashOfConfig":"14"},{"size":454,"mtime":1612332686546,"results":"23","hashOfConfig":"14"},{"size":3907,"mtime":1611892162406,"results":"24","hashOfConfig":"14"},{"size":5222,"mtime":1611473911622,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1bx6nlt",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"28"},"/home/ashish/Desktop/projects/MERN/instagram clone/client/src/index.js",[],["58","59"],"/home/ashish/Desktop/projects/MERN/instagram clone/client/src/App.js",["60","61"],"import NavBar from \"./components/Navbar\";\nimport { useEffect, createContext, useReducer, useContext } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter, Route, Switch, useHistory } from \"react-router-dom\";\nimport Home from \"./components/screens/Home\";\nimport Profile from \"./components/screens/Profile\";\nimport Signin from \"./components/screens/Signin\";\nimport Signup from \"./components/screens/Signup\";\nimport CreatePost from \"./components/screens/CreatePost\";\nimport UserProfile from \"./components/screens/UserProfile\";\nimport SubscribedUserPosts from \"./components/screens/SubscribedUserPosts\";\nimport { reducer, initialState } from \"./reducers/userReducer\";\n\nexport const UserContext = createContext();\n\nconst Routing = () => {\n\tconst history = useHistory();\n\tconst { state, dispatch } = useContext(UserContext);\n\tuseEffect(() => {\n\t\tconst user = JSON.parse(localStorage.getItem(\"user\"));\n\t\tif (user) {\n\t\t\tdispatch({ type: \"USER\", payload: user });\n\t\t} else {\n\t\t\thistory.push(\"/signin\");\n\t\t}\n\t}, []);\n\treturn (\n\t\t<Switch>\n\t\t\t<Route exact path=\"/\">\n\t\t\t\t<Home />\n\t\t\t</Route>\n\t\t\t<Route path=\"/signin\">\n\t\t\t\t<Signin />\n\t\t\t</Route>\n\t\t\t<Route path=\"/signup\">\n\t\t\t\t<Signup />\n\t\t\t</Route>\n\t\t\t<Route exact path=\"/profile\">\n\t\t\t\t<Profile />\n\t\t\t</Route>\n\t\t\t<Route path=\"/create\">\n\t\t\t\t<CreatePost />\n\t\t\t</Route>\n\t\t\t<Route path=\"/profile/:userid\">\n\t\t\t\t<UserProfile />\n\t\t\t</Route>\n\t\t\t<Route path=\"/myfollowingpost\">\n\t\t\t\t<SubscribedUserPosts />\n\t\t\t</Route>\n\t\t</Switch>\n\t);\n};\n\nfunction App() {\n\tconst [state, dispatch] = useReducer(reducer, initialState);\n\treturn (\n\t\t<UserContext.Provider value={{ state, dispatch }}>\n\t\t\t<BrowserRouter>\n\t\t\t\t<NavBar />\n\t\t\t\t<Routing />\n\t\t\t</BrowserRouter>\n\t\t</UserContext.Provider>\n\t);\n}\n\nexport default App;\n","/home/ashish/Desktop/projects/MERN/instagram clone/client/src/reportWebVitals.js",[],"/home/ashish/Desktop/projects/MERN/instagram clone/client/src/components/Navbar.js",[],"/home/ashish/Desktop/projects/MERN/instagram clone/client/src/components/screens/Profile.js",["62"],"/home/ashish/Desktop/projects/MERN/instagram clone/client/src/components/screens/Home.js",["63","64"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { UserContext } from \"../../App\";\nimport { Link } from \"react-router-dom\";\nimport M from \"materialize-css\";\n\nconst Home = () => {\n\tconst [data, setData] = useState([]);\n\tconst { state, dispatch } = useContext(UserContext);\n\n\tuseEffect(() => {\n\t\tfetch(\"/allpost\", {\n\t\t\theaders: {\n\t\t\t\tAuthorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((result) => {\n\t\t\t\tsetData(result.posts);\n\t\t\t});\n\t}, []);\n\n\tconst likePost = (id) => {\n\t\tfetch(\"/like\", {\n\t\t\tmethod: \"put\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\tAuthorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tpostId: id,\n\t\t\t}),\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((result) => {\n\t\t\t\tconst newData = data.map((item) => {\n\t\t\t\t\tif (item._id === result._id) {\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn item;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tsetData(newData);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t};\n\n\tconst unlikePost = (id) => {\n\t\tfetch(\"/unlike\", {\n\t\t\tmethod: \"put\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\tAuthorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tpostId: id,\n\t\t\t}),\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((result) => {\n\t\t\t\tconst newData = data.map((item) => {\n\t\t\t\t\tif (item._id === result._id) {\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn item;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tsetData(newData);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t};\n\n\tconst makeComment = (text, postId) => {\n\t\tfetch(\"/comment\", {\n\t\t\tmethod: \"put\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\tAuthorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tpostId,\n\t\t\t\ttext,\n\t\t\t}),\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((result) => {\n\t\t\t\tconst newData = data.map((item) => {\n\t\t\t\t\tif (item._id == result._id) {\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn item;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tsetData(newData);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t};\n\n\tconst deletePost = (postid) => {\n\t\tfetch(`/deletepost/${postid}`, {\n\t\t\tmethod: \"delete\",\n\t\t\theaders: {\n\t\t\t\tAuthorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((result) => {\n\t\t\t\tM.toast({\n\t\t\t\t\thtml: \"Post deleted successfully\",\n\t\t\t\t\tclasses: \"#43a047 green darken-1\",\n\t\t\t\t});\n\t\t\t\tconst newData = data.filter((item) => {\n\t\t\t\t\treturn item._id !== result._id;\n\t\t\t\t});\n\t\t\t\tsetData(newData);\n\t\t\t});\n\t};\n\n\tconst deleteComment = (postId, commentId) => {\n\t\tfetch(`/deletecomment/${postId}/${commentId}`, {\n\t\t\tmethod: \"delete\",\n\t\t\theaders: {\n\t\t\t\tAuthorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((result) => {\n\t\t\t\tconst newData = data.map((item) => {\n\t\t\t\t\tif (item._id === result._id) {\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn item;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tsetData(newData);\n\t\t\t\tM.toast({\n\t\t\t\t\thtml: \"Comment deleted successfully\",\n\t\t\t\t\tclasses: \"#43a047 green darken-1\",\n\t\t\t\t});\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"home\">\n\t\t\t{data.map((item) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div className=\"card home-card\" key={item._id}>\n\t\t\t\t\t\t<h5 style={{ padding: \"5px\" }}>\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\tto={\n\t\t\t\t\t\t\t\t\titem.postedBy._id !== state._id\n\t\t\t\t\t\t\t\t\t\t? \"/profile/\" + item.postedBy._id\n\t\t\t\t\t\t\t\t\t\t: \"/profile/\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{item.postedBy.name}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t{item.postedBy._id === state._id && (\n\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\tclassName=\"material-icons\"\n\t\t\t\t\t\t\t\t\tstyle={{ float: \"right\" }}\n\t\t\t\t\t\t\t\t\tonClick={() => deletePost(item._id)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tdelete\n\t\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t<div className=\"card-image\">\n\t\t\t\t\t\t\t<img src={item.photo} alt=\"\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"card-content\">\n\t\t\t\t\t\t\t<i className=\"material-icons\" style={{ color: \"red\" }}>\n\t\t\t\t\t\t\t\tfavorite\n\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t\t{item.likes.includes(state._id) ? (\n\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\tclassName=\"material-icons\"\n\t\t\t\t\t\t\t\t\tonClick={() => unlikePost(item._id)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tthumb_down\n\t\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\tclassName=\"material-icons\"\n\t\t\t\t\t\t\t\t\tonClick={() => likePost(item._id)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tthumb_up\n\t\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t<h6>{item.likes.length} likes</h6>\n\t\t\t\t\t\t\t<h4>{item.title}</h4>\n\t\t\t\t\t\t\t<p>{item.body}</p>\n\t\t\t\t\t\t\t{item.comments.map((record) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<h6 key={record._id}>\n\t\t\t\t\t\t\t\t\t\t<span style={{ fontWeight: \"500\" }}>\n\t\t\t\t\t\t\t\t\t\t\t{record.postedBy.name}\n\t\t\t\t\t\t\t\t\t\t</span>{\" \"}\n\t\t\t\t\t\t\t\t\t\t{record.text}\n\t\t\t\t\t\t\t\t\t\t{record.postedBy._id === state._id && (\n\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"material-icons\"\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ float: \"right\" }}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => deleteComment(item._id, record._id)}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\tdelete\n\t\t\t\t\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</h6>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t<form\n\t\t\t\t\t\t\t\tonSubmit={(e) => {\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t\tmakeComment(e.target[0].value, item._id);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" placeholder=\"Add a comment..\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n};\n\nexport default Home;\n","/home/ashish/Desktop/projects/MERN/instagram clone/client/src/components/screens/Signup.js",["65","66","67"],"import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport M from \"materialize-css\";\n\nconst Signup = () => {\n\tconst history = useHistory();\n\tconst [name, setName] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\tconst [email, setEmail] = useState(\"\");\n\tconst [image, setImage] = useState(\"\");\n\tconst [url, setUrl] = useState(undefined);\n\n\tuseEffect(() => {\n\t\tif (url) {\n\t\t\tuploadFields();\n\t\t}\n\t}, [url]);\n\n\tconst uploadPic = () => {\n\t\tconst data = new FormData();\n\t\tdata.append(\"file\", image);\n\t\tdata.append(\"upload_preset\", \"insta-clone\");\n\t\tdata.append(\"cloud_name\", \"mernproject\");\n\t\tfetch(\"\thttps://api.cloudinary.com/v1_1/mernproject/image/upload\", {\n\t\t\tmethod: \"post\",\n\t\t\tbody: data,\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => {\n\t\t\t\tsetUrl(data.url);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t};\n\n\tconst uploadFields = () => {\n\t\tif (\n\t\t\t!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\n\t\t\t\temail\n\t\t\t)\n\t\t) {\n\t\t\tM.toast({\n\t\t\t\thtml: \"Please use a valid email.\",\n\t\t\t\tclasses: \"#c62828 red darken-3\",\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tfetch(\"/signup\", {\n\t\t\tmethod: \"post\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tname,\n\t\t\t\tpassword,\n\t\t\t\temail,\n\t\t\t\tpic: url,\n\t\t\t}),\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => {\n\t\t\t\tif (data.error) {\n\t\t\t\t\tM.toast({ html: data.error, classes: \"#c62828 red darken-3\" });\n\t\t\t\t} else {\n\t\t\t\t\tM.toast({ html: data.message, classes: \"#43a047 green darken-1\" });\n\t\t\t\t\thistory.push(\"/signin\");\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t};\n\n\tconst PostData = () => {\n\t\tif (image) {\n\t\t\tuploadPic();\n\t\t} else {\n\t\t\tuploadFields();\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"mycard\">\n\t\t\t<div className=\"card auth-card input-field\">\n\t\t\t\t<h2>Instagram</h2>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"name\"\n\t\t\t\t\tvalue={name}\n\t\t\t\t\tonChange={(e) => setName(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"email\"\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tplaceholder=\"password\"\n\t\t\t\t\tvalue={password}\n\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<div className=\"file-field input-field\">\n\t\t\t\t\t<div className=\"btn\">\n\t\t\t\t\t\t<span>Choose an image</span>\n\t\t\t\t\t\t<input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"file-path-wrapper\">\n\t\t\t\t\t\t<input className=\"file-path validate\" type=\"text\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\n\t\t\t\t\tonClick={() => PostData()}\n\t\t\t\t>\n\t\t\t\t\tSignUp\n\t\t\t\t</button>\n\t\t\t\t<h5>\n\t\t\t\t\t<Link to=\"/signin\">Already have an account?</Link>\n\t\t\t\t</h5>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Signup;\n","/home/ashish/Desktop/projects/MERN/instagram clone/client/src/components/screens/Signin.js",["68","69","70"],"import React, { useState, useContext } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { UserContext } from \"../../App\";\nimport M from \"materialize-css\";\n\nconst Signin = () => {\n\tconst { state, dispatch } = useContext(UserContext);\n\tconst history = useHistory();\n\tconst [password, setPassword] = useState(\"\");\n\tconst [email, setEmail] = useState(\"\");\n\tconst PostData = () => {\n\t\tif (\n\t\t\t!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\n\t\t\t\temail\n\t\t\t)\n\t\t) {\n\t\t\tM.toast({\n\t\t\t\thtml: \"Please use a valid email.\",\n\t\t\t\tclasses: \"#c62828 red darken-3\",\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tfetch(\"/signin\", {\n\t\t\tmethod: \"post\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tpassword,\n\t\t\t\temail,\n\t\t\t}),\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => {\n\t\t\t\tif (data.error) {\n\t\t\t\t\tM.toast({ html: data.error, classes: \"#c62828 red darken-3\" });\n\t\t\t\t} else {\n\t\t\t\t\tlocalStorage.setItem(\"jwt\", data.token);\n\t\t\t\t\tlocalStorage.setItem(\"user\", JSON.stringify(data.user));\n\t\t\t\t\tdispatch({ type: \"USER\", payload: data.user });\n\t\t\t\t\tM.toast({\n\t\t\t\t\t\thtml: \"Signedin successfully\",\n\t\t\t\t\t\tclasses: \"#43a047 green darken-1\",\n\t\t\t\t\t});\n\t\t\t\t\thistory.push(\"/\");\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"mycard\">\n\t\t\t<div className=\"card auth-card input-field\">\n\t\t\t\t<h2>Instagram</h2>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"email\"\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tplaceholder=\"password\"\n\t\t\t\t\tvalue={password}\n\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\n\t\t\t\t\tonClick={() => PostData()}\n\t\t\t\t>\n\t\t\t\t\tLogin\n\t\t\t\t</button>\n\t\t\t\t<h5>\n\t\t\t\t\t<Link to=\"/signup\">Not signed up yet?</Link>\n\t\t\t\t</h5>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Signin;\n","/home/ashish/Desktop/projects/MERN/instagram clone/client/src/components/screens/CreatePost.js",["71"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport M from \"materialize-css\";\n\nconst CreatePost = () => {\n\tconst history = useHistory();\n\tconst [title, setTitle] = useState(\"\");\n\tconst [body, setBody] = useState(\"\");\n\tconst [image, setImage] = useState(\"\");\n\tconst [url, setUrl] = useState(\"\");\n\n\tuseEffect(() => {\n\t\tif (url) {\n\t\t\t// Connect to backend\n\t\t\tfetch(\"/createpost\", {\n\t\t\t\tmethod: \"post\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\tAuthorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\ttitle,\n\t\t\t\t\tbody,\n\t\t\t\t\tpic: url,\n\t\t\t\t}),\n\t\t\t})\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then((data) => {\n\t\t\t\t\tif (data.error) {\n\t\t\t\t\t\tM.toast({ html: data.error, classes: \"#c62828 red darken-3\" });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tM.toast({\n\t\t\t\t\t\t\thtml: \"Post created successfully\",\n\t\t\t\t\t\t\tclasses: \"#43a047 green darken-1\",\n\t\t\t\t\t\t});\n\t\t\t\t\t\thistory.push(\"/\");\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t});\n\t\t}\n\t}, [url]);\n\n\tconst postDetails = () => {\n\t\t// posting image to cloudinary\n\t\tconst data = new FormData();\n\t\tdata.append(\"file\", image);\n\t\tdata.append(\"upload_preset\", \"insta-clone\");\n\t\tdata.append(\"cloud_name\", \"mernproject\");\n\t\tfetch(\"\thttps://api.cloudinary.com/v1_1/mernproject/image/upload\", {\n\t\t\tmethod: \"post\",\n\t\t\tbody: data,\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => {\n\t\t\t\tsetUrl(data.url);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"card input-filed\"\n\t\t\tstyle={{\n\t\t\t\tmargin: \"30px auto\",\n\t\t\t\tmaxWidth: \"500px\",\n\t\t\t\tpadding: \"20px\",\n\t\t\t\ttextAlign: \"center\",\n\t\t\t}}\n\t\t>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"title\"\n\t\t\t\tvalue={title}\n\t\t\t\tonChange={(e) => setTitle(e.target.value)}\n\t\t\t/>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"body\"\n\t\t\t\tvalue={body}\n\t\t\t\tonChange={(e) => setBody(e.target.value)}\n\t\t\t/>\n\t\t\t<div className=\"file-field input-field\">\n\t\t\t\t<div className=\"btn\">\n\t\t\t\t\t<span>Choose an image</span>\n\t\t\t\t\t<input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"file-path-wrapper\">\n\t\t\t\t\t<input className=\"file-path validate\" type=\"text\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<button\n\t\t\t\tclassName=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\n\t\t\t\tonClick={() => postDetails()}\n\t\t\t>\n\t\t\t\tPost\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default CreatePost;\n","/home/ashish/Desktop/projects/MERN/instagram clone/client/src/reducers/userReducer.js",[],"/home/ashish/Desktop/projects/MERN/instagram clone/client/src/components/screens/UserProfile.js",["72"],"import React, { useEffect, useState, useContext } from \"react\";\nimport { UserContext } from \"../../App\";\nimport { useParams } from \"react-router-dom\";\n\nconst UserProfile = () => {\n\tconst [userProfile, setProfile] = useState(null);\n\tconst { state, dispatch } = useContext(UserContext);\n\tconst { userid } = useParams();\n\tconst [showFollow, setShowFollow] = useState(\n\t\tstate ? !state.following.includes(userid) : true\n\t);\n\n\tuseEffect(() => {\n\t\tfetch(`/user/${userid}`, {\n\t\t\theaders: {\n\t\t\t\tAuthorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((result) => {\n\t\t\t\t// console.log(result);\n\t\t\t\tsetProfile(result);\n\t\t\t});\n\t}, []);\n\n\tconst followUser = () => {\n\t\tfetch(\"/follow\", {\n\t\t\tmethod: \"put\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\tAuthorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tfollowId: userid,\n\t\t\t}),\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: \"UPDATE\",\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tfollowing: data.following,\n\t\t\t\t\t\tfollowers: data.followers,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tlocalStorage.setItem(\"user\", JSON.stringify(data));\n\t\t\t\tsetProfile((prevState) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...prevState,\n\t\t\t\t\t\tuser: {\n\t\t\t\t\t\t\t...prevState.user,\n\t\t\t\t\t\t\tfollowers: [...prevState.user.followers, data._id],\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsetShowFollow(false);\n\t\t\t});\n\t};\n\n\tconst unfollowUser = () => {\n\t\tfetch(\"/unfollow\", {\n\t\t\tmethod: \"put\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\tAuthorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tunfollowId: userid,\n\t\t\t}),\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: \"UPDATE\",\n\t\t\t\t\tpayload: {\n\t\t\t\t\t\tfollowing: data.following,\n\t\t\t\t\t\tfollowers: data.followers,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tlocalStorage.setItem(\"user\", JSON.stringify(data));\n\t\t\t\tsetProfile((prevState) => {\n\t\t\t\t\tconst newFollower = prevState.user.followers.filter(\n\t\t\t\t\t\t(item) => item !== data._id\n\t\t\t\t\t);\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...prevState,\n\t\t\t\t\t\tuser: {\n\t\t\t\t\t\t\t...prevState.user,\n\t\t\t\t\t\t\tfollowers: newFollower,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsetShowFollow(true);\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{userProfile ? (\n\t\t\t\t<div style={{ maxWidth: \"550px\", margin: \"0px auto\" }}>\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\tjustifyContent: \"space-around\",\n\t\t\t\t\t\t\tmargin: \"18px 0px\",\n\t\t\t\t\t\t\tborderBottom: \"1px solid grey\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\twidth: \"160px\",\n\t\t\t\t\t\t\t\t\theight: \"160px\",\n\t\t\t\t\t\t\t\t\tborderRadius: \"80px\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tsrc={userProfile.user.pic}\n\t\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h4>{userProfile.user.name}</h4>\n\t\t\t\t\t\t\t<h5>{userProfile.user.email}</h5>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\t\tjustifyContent: \"space-between\",\n\t\t\t\t\t\t\t\t\twidth: \"108%\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<h6>{userProfile.posts.length} posts</h6>\n\t\t\t\t\t\t\t\t<h6>{userProfile.user.followers.length} followers</h6>\n\t\t\t\t\t\t\t\t<h6>{userProfile.user.following.length} following</h6>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{showFollow ? (\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tstyle={{ margin: \"10px\" }}\n\t\t\t\t\t\t\t\t\tclassName=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\n\t\t\t\t\t\t\t\t\tonClick={() => followUser()}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tFollow\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tstyle={{ margin: \"10px\" }}\n\t\t\t\t\t\t\t\t\tclassName=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\n\t\t\t\t\t\t\t\t\tonClick={() => unfollowUser()}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tUnfollow\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"gallery\">\n\t\t\t\t\t\t{userProfile.posts.map((item) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tkey={item._id}\n\t\t\t\t\t\t\t\t\tclassName=\"item\"\n\t\t\t\t\t\t\t\t\tsrc={item.photo}\n\t\t\t\t\t\t\t\t\talt={item.title}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<h2>loading...</h2>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default UserProfile;\n","/home/ashish/Desktop/projects/MERN/instagram clone/client/src/components/screens/SubscribedUserPosts.js",["73","74"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { UserContext } from \"../../App\";\nimport { Link } from \"react-router-dom\";\nimport M from \"materialize-css\";\n\nconst SubscribedUserPosts = () => {\n\tconst [data, setData] = useState([]);\n\tconst { state, dispatch } = useContext(UserContext);\n\n\tuseEffect(() => {\n\t\tfetch(\"/getsubpost\", {\n\t\t\theaders: {\n\t\t\t\tAuthorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((result) => {\n\t\t\t\tsetData(result.posts);\n\t\t\t});\n\t}, []);\n\n\tconst likePost = (id) => {\n\t\tfetch(\"/like\", {\n\t\t\tmethod: \"put\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\tAuthorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tpostId: id,\n\t\t\t}),\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((result) => {\n\t\t\t\tconst newData = data.map((item) => {\n\t\t\t\t\tif (item._id === result._id) {\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn item;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tsetData(newData);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t};\n\n\tconst unlikePost = (id) => {\n\t\tfetch(\"/unlike\", {\n\t\t\tmethod: \"put\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\tAuthorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tpostId: id,\n\t\t\t}),\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((result) => {\n\t\t\t\tconst newData = data.map((item) => {\n\t\t\t\t\tif (item._id === result._id) {\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn item;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tsetData(newData);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t};\n\n\tconst makeComment = (text, postId) => {\n\t\tfetch(\"/comment\", {\n\t\t\tmethod: \"put\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\tAuthorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tpostId,\n\t\t\t\ttext,\n\t\t\t}),\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((result) => {\n\t\t\t\tconst newData = data.map((item) => {\n\t\t\t\t\tif (item._id == result._id) {\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn item;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tsetData(newData);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t};\n\n\tconst deletePost = (postid) => {\n\t\tfetch(`/deletepost/${postid}`, {\n\t\t\tmethod: \"delete\",\n\t\t\theaders: {\n\t\t\t\tAuthorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((result) => {\n\t\t\t\tM.toast({\n\t\t\t\t\thtml: \"Post deleted successfully\",\n\t\t\t\t\tclasses: \"#43a047 green darken-1\",\n\t\t\t\t});\n\t\t\t\tconst newData = data.filter((item) => {\n\t\t\t\t\treturn item._id !== result._id;\n\t\t\t\t});\n\t\t\t\tsetData(newData);\n\t\t\t});\n\t};\n\n\tconst deleteComment = (postId, commentId) => {\n\t\tfetch(`/deletecomment/${postId}/${commentId}`, {\n\t\t\tmethod: \"delete\",\n\t\t\theaders: {\n\t\t\t\tAuthorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((result) => {\n\t\t\t\tconst newData = data.map((item) => {\n\t\t\t\t\tif (item._id === result._id) {\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn item;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tsetData(newData);\n\t\t\t\tM.toast({\n\t\t\t\t\thtml: \"Comment deleted successfully\",\n\t\t\t\t\tclasses: \"#43a047 green darken-1\",\n\t\t\t\t});\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"home\">\n\t\t\t{data.map((item) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div className=\"card home-card\" key={item._id}>\n\t\t\t\t\t\t<h5 style={{ padding: \"5px\" }}>\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\tto={\n\t\t\t\t\t\t\t\t\titem.postedBy._id !== state._id\n\t\t\t\t\t\t\t\t\t\t? \"/profile/\" + item.postedBy._id\n\t\t\t\t\t\t\t\t\t\t: \"/profile/\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{item.postedBy.name}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t{item.postedBy._id === state._id && (\n\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\tclassName=\"material-icons\"\n\t\t\t\t\t\t\t\t\tstyle={{ float: \"right\" }}\n\t\t\t\t\t\t\t\t\tonClick={() => deletePost(item._id)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tdelete\n\t\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t<div className=\"card-image\">\n\t\t\t\t\t\t\t<img src={item.photo} alt=\"\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"card-content\">\n\t\t\t\t\t\t\t<i className=\"material-icons\" style={{ color: \"red\" }}>\n\t\t\t\t\t\t\t\tfavorite\n\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t\t{item.likes.includes(state._id) ? (\n\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\tclassName=\"material-icons\"\n\t\t\t\t\t\t\t\t\tonClick={() => unlikePost(item._id)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tthumb_down\n\t\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\tclassName=\"material-icons\"\n\t\t\t\t\t\t\t\t\tonClick={() => likePost(item._id)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tthumb_up\n\t\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t<h6>{item.likes.length} likes</h6>\n\t\t\t\t\t\t\t<h4>{item.title}</h4>\n\t\t\t\t\t\t\t<p>{item.body}</p>\n\t\t\t\t\t\t\t{item.comments.map((record) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<h6 key={record._id}>\n\t\t\t\t\t\t\t\t\t\t<span style={{ fontWeight: \"500\" }}>\n\t\t\t\t\t\t\t\t\t\t\t{record.postedBy.name}\n\t\t\t\t\t\t\t\t\t\t</span>{\" \"}\n\t\t\t\t\t\t\t\t\t\t{record.text}\n\t\t\t\t\t\t\t\t\t\t{record.postedBy._id === state._id && (\n\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"material-icons\"\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ float: \"right\" }}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => deleteComment(item._id, record._id)}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\tdelete\n\t\t\t\t\t\t\t\t\t\t\t</i>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</h6>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t<form\n\t\t\t\t\t\t\t\tonSubmit={(e) => {\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t\tmakeComment(e.target[0].value, item._id);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" placeholder=\"Add a comment..\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n};\n\nexport default SubscribedUserPosts;\n",{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":18,"column":10,"nodeType":"81","messageId":"82","endLine":18,"endColumn":15},{"ruleId":"83","severity":1,"message":"84","line":26,"column":5,"nodeType":"85","endLine":26,"endColumn":7,"suggestions":"86"},{"ruleId":"83","severity":1,"message":"87","line":58,"column":5,"nodeType":"85","endLine":58,"endColumn":12,"suggestions":"88"},{"ruleId":"79","severity":1,"message":"89","line":8,"column":17,"nodeType":"81","messageId":"82","endLine":8,"endColumn":25},{"ruleId":"90","severity":1,"message":"91","line":91,"column":19,"nodeType":"92","messageId":"93","endLine":91,"endColumn":21},{"ruleId":"83","severity":1,"message":"94","line":17,"column":5,"nodeType":"85","endLine":17,"endColumn":10,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":39,"column":15,"nodeType":"98","messageId":"99","endLine":39,"endColumn":16,"suggestions":"100"},{"ruleId":"96","severity":1,"message":"97","line":39,"column":40,"nodeType":"98","messageId":"99","endLine":39,"endColumn":41,"suggestions":"101"},{"ruleId":"79","severity":1,"message":"80","line":7,"column":10,"nodeType":"81","messageId":"82","endLine":7,"endColumn":15},{"ruleId":"96","severity":1,"message":"97","line":13,"column":15,"nodeType":"98","messageId":"99","endLine":13,"endColumn":16,"suggestions":"102"},{"ruleId":"96","severity":1,"message":"97","line":13,"column":40,"nodeType":"98","messageId":"99","endLine":13,"endColumn":41,"suggestions":"103"},{"ruleId":"83","severity":1,"message":"104","line":43,"column":5,"nodeType":"85","endLine":43,"endColumn":10,"suggestions":"105"},{"ruleId":"83","severity":1,"message":"106","line":24,"column":5,"nodeType":"85","endLine":24,"endColumn":7,"suggestions":"107"},{"ruleId":"79","severity":1,"message":"89","line":8,"column":17,"nodeType":"81","messageId":"82","endLine":8,"endColumn":25},{"ruleId":"90","severity":1,"message":"91","line":91,"column":19,"nodeType":"92","messageId":"93","endLine":91,"endColumn":21},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["110"],"React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["111"],"'dispatch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'uploadFields'. Either include it or remove the dependency array.",["112"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["113","114"],["115","116"],["117","118"],["119","120"],"React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["121"],"React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["122"],"no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"messageId":"129","fix":"130","desc":"131"},{"messageId":"132","fix":"133","desc":"134"},{"messageId":"129","fix":"135","desc":"131"},{"messageId":"132","fix":"136","desc":"134"},{"messageId":"129","fix":"137","desc":"131"},{"messageId":"132","fix":"138","desc":"134"},{"messageId":"129","fix":"139","desc":"131"},{"messageId":"132","fix":"140","desc":"134"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},"Update the dependencies array to be: [dispatch, history]",{"range":"145","text":"146"},"Update the dependencies array to be: [dispatch, image, state]",{"range":"147","text":"148"},"Update the dependencies array to be: [uploadFields, url]",{"range":"149","text":"150"},"removeEscape",{"range":"151","text":"152"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"153","text":"154"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"155","text":"152"},{"range":"156","text":"154"},{"range":"157","text":"152"},{"range":"158","text":"154"},{"range":"159","text":"152"},{"range":"160","text":"154"},"Update the dependencies array to be: [body, history, title, url]",{"range":"161","text":"162"},"Update the dependencies array to be: [userid]",{"range":"163","text":"164"},[1007,1009],"[dispatch, history]",[1467,1474],"[dispatch, image, state]",[465,470],"[uploadFields, url]",[948,949],"",[948,948],"\\",[973,974],[973,973],[424,425],[424,424],[449,450],[449,449],[1026,1031],"[body, history, title, url]",[670,672],"[userid]"]